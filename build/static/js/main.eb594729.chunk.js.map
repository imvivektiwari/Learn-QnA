{"version":3,"sources":["redux/login/loginActionTypes.js","redux/questionsAnswes/questionsAnswersActionTypes.js","components/header/Header.js","utils/storage.js","redux/login/loginActions.js","components/login/Login.js","utils/utility.js","components/form/FormRadio.js","components/questionAnswer/Answers.js","redux/questionsAnswes/questionsAnswersActions.js","components/questionAnswer/QuestionForm.js","components/previousSubmission/PreviousSubmission.js","components/form/FormInput.js","components/form/FormSelect.js","components/form/Form.js","components/mainQuiz/ChooseQuizForm.js","redux/quizForm/quizFromActions.js","redux/quizForm/quizFromActionTypes.js","components/welcome/Welcome.js","components/mainQuiz/MainQuiz.js","components/startTest/StartTest.js","constants.js","App.js","serviceWorker.js","redux/login/loginReducer.js","redux/quizForm/quizFormReducer.js","redux/questionsAnswes/questionsAnswersReducer.js","redux/store.js","index.js"],"names":["READ_USER","STORE_USER","DELETE_USER","SET_QUESTIONS","REMOVE_QUESTIONS","UPDATE_ATTEMP_ANSWER","Header","logoRef","login","useSelector","store","disabled","isAuthenticated","activeStyle","borderBottom","id","className","to","ref","exact","icon","faSignOutAlt","user","username","charAt","toUpperCase","faSignInAlt","storeToLocalStorage","key","value","localStorage","setItem","readFromLocalStorage","getItem","storeUserLogin","email","payload","JSON","stringify","type","deleteUserLogin","removeItem","Login","goToRoot","dispatch","useDispatch","params","useParams","storeUser","useCallback","event","preventDefault","target","useEffect","auth","console","log","onSubmit","name","placeholder","decodeHTMLEntities","text","textArea","document","createElement","innerHTML","FormRadio","props","onChange","checked","label","Answers","answers","incorrect","correct","updateAnswer","option","answer","questionIndex","currectQuestion","map","uuidv4","stopChange","attempedOption","QuestionForm","questions","activeQuestion","category","difficulty","length","question","correct_answer","incorrect_answers","PreviousSubmission","quiz","state","correctCount","parse","reduce","accumulator","index","FormInput","setValue","FormSelect","selectedValue","setOption","allOptions","Form","children","submitValue","ChooseQuizForm","quizForm","history","useHistory","push","numberOfQuestions","categories","selected","categoryOptions","difficultyLevels","difficultyLevelOptions","types","typeOptions","Welcome","MainQuiz","StartTest","questionAnswers","numOfQuestions","selectedCategory","selectedDifficultyLevel","selectedType","useState","setCurrectQuestion","uref","useRef","fetchQuestions","url","amount","getQuizURL","current","a","fetch","json","responce","data","results","setQuestionAnswersAction","setTimeout","onClick","window","confirm","App","click","path","strict","component","Boolean","location","hostname","match","require","initialState","rootStore","combineReducers","action","newState","appendAns","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb594729.chunk.js","sourcesContent":["export const READ_USER = \"READ_USER\";\nexport const STORE_USER = \"STORE_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\n","export const SET_QUESTIONS = \"SET_QUESTIONS\";\nexport const REMOVE_QUESTIONS = \"REMOVE_QUESTIONS\";\nexport const UPDATE_ATTEMP_ANSWER = \"UPDATE_ATTEMP_ANSWER\";","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport './header.css';\nimport { NavLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faSignInAlt} from '@fortawesome/free-solid-svg-icons'\n\nconst Header = ({logoRef})=>{\n\n    const login = useSelector((store)=>store.login);\n    const disabled = !login.isAuthenticated?\"disabled\":\"\";\n    const activeStyle={\n        borderBottom: \"3px solid #46D7FE\"\n    }\n    return (\n        <div id=\"header\">\n            <div className=\"header-item logo-container\">\n                <Link to=\"/\" className=\"logo-text\" ref={logoRef}>LearnQnA</Link>\n            </div>\n            <div className=\"header-item nav-container\">\n                <NavLink to=\"/\" exact={true} className={'nav-link'} activeStyle={activeStyle}>\n                    Home\n                </NavLink>\n                <NavLink to=\"/previousSubmission\" exact={true} className={`nav-link ${disabled}`} activeStyle={activeStyle}>\n                    Last Submission\n                </NavLink>\n                {\n                !login.isAuthenticated?\n                    <NavLink to=\"/login\" className=\"nav-link\" activeStyle={activeStyle}>\n                         <span className=\"sign-auth-text\">Login</span>\n                        <FontAwesomeIcon icon={faSignInAlt}/>\n                    </NavLink>:\n                    <div className=\"user-profile-container\">\n                        <Link to=\"/login/noauth\" className=\"nav-link\">\n                            <span className=\"sign-auth-text\">Sign Out</span>\n                            <FontAwesomeIcon icon={faSignOutAlt}/>\n                        </Link>\n                        <span className=\"user-profile\">{login.user?.username.charAt(0).toUpperCase()}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default Header;","export const storeToLocalStorage = (key, value)=>{\n    return localStorage.setItem(key, value);\n}\n\nexport const readFromLocalStorage = (key)=>{\n    let value = localStorage.getItem(key);\n    return value;\n}\n\n\nexport const deleteFromLocalStorage = (key)=>{\n   localStorage.removeItem(key);\n}","import {READ_USER, STORE_USER, DELETE_USER} from './loginActionTypes';\nimport {storeToLocalStorage, deleteFromLocalStorage} from '../../utils/storage';\n\nexport const readLogin = (userData)=>{\n    return{\n        type:READ_USER,\n        payload:userData\n    }\n};\n\nexport const storeUserLogin = (email, username)=>{\n    const payload={\n        email,\n        username\n    }\n    storeToLocalStorage(STORE_USER, JSON.stringify(payload));\n    return{\n        type:STORE_USER,\n        payload\n    }\n};\n\n\nexport const deleteUserLogin = ()=>{\n    deleteFromLocalStorage(STORE_USER);\n    return{\n        type:DELETE_USER\n    }\n};\n","import React, {useCallback, useEffect} from 'react'\nimport {useDispatch} from 'react-redux';\nimport './login.css';\nimport { storeUserLogin, deleteUserLogin } from '../../redux/login/loginActions';\nimport { useParams } from 'react-router-dom';\n\nconst Login = ({goToRoot})=>{\n    const dispatch = useDispatch();\n    const params = useParams();\n    const storeUser = useCallback(\n        (event)=>{\n            event.preventDefault();\n            let email = event.target.email.value;\n            let username = event.target.username.value;\n            dispatch(storeUserLogin(email, username));\n            goToRoot();\n        }, [dispatch, goToRoot]\n    );\n\n    useEffect(()=>{\n        if(params?.auth===\"noauth\"){\n            console.log(\"signout\");\n            dispatch(deleteUserLogin());\n        }\n    }, [dispatch, params]);\n\n    return (\n        <div id=\"login-container\">\n            <form id=\"login-form\" onSubmit={(event)=> storeUser(event)}>\n               <div>\n                    <h3 className=\"title\">LearnQnA - Login</h3>\n                    <input name=\"email\" type=\"text\" placeholder=\"Email\"/>\n                    <input name=\"username\" type=\"text\" placeholder=\"Name\" />\n                    <input type=\"submit\" value=\"Login\" />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import { BASE_API_URL } from \"../constants\";\n\nexport const getQuizURL = (quizForm)=>{\n    let url = `${BASE_API_URL}?`;\n    let amount = `amount=${quizForm.numOfQuestions}`;\n    let category = `&category=${quizForm.selectedCategory}`;\n    let difficulty = `&difficulty=${quizForm.selectedDifficultyLevel}`;\n    let type = `&type=${quizForm.selectedType}`;\n    \n    quizForm.numOfQuestions!==0 && (url+=amount);\n    quizForm.selectedCategory!=='any' && (url+=category);\n    quizForm.selectedDifficultyLevel!=='any' && (url+=difficulty);\n    quizForm.selectedType!=='any' && (url+=type);\n\n    return url;\n};\n\nexport const decodeHTMLEntities = (text)=>{\n    var textArea = document.createElement('textarea');\n    textArea.innerHTML = text;\n    const value = textArea.value;\n    return value;\n}","import React from 'react'\n\nconst FormRadio = (props)=>(\n    <label>\n        <input type='radio' name={props.name} \n            onChange={props.onChange} \n            checked={props.checked}\n        />\n        <span>{props.label}</span>\n    </label>\n);\n\nexport default FormRadio;","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { decodeHTMLEntities } from '../../utils/utility';\nimport { setAttemptedQuestionAction } from '../../redux/questionsAnswes/questionsAnswersActions';\nimport FormRadio from '../form/FormRadio';\n\nexport default function Answers(props) {\n    let answers;\n    if(props?.incorrect && typeof props?.correct===\"string\"){\n        answers = [...props.incorrect, props.correct]\n    }\n    else if(props?.incorrect){\n        answers = [...props.incorrect, ...props.correct]\n    }\n    \n    const dispatch = useDispatch()\n\n    const updateAnswer = (option) => {\n        dispatch(setAttemptedQuestionAction(option, props.currectQuestion))\n    };\n    \n    return(\n        answers? answers.map((option)=>{\n            return(\n                <p className=\"answer-options\" key={uuidv4()}>\n                    <FormRadio \n                        name={`quiz-option-radio-${props.currectQuestion}`}\n                        onChange={()=> props.stopChange || updateAnswer(option)}\n                        checked={props.attempedOption===option}\n                        label={decodeHTMLEntities(option)}\n                    />\n                </p>\n            )\n        }):null\n    )\n}","import {SET_QUESTIONS, REMOVE_QUESTIONS, UPDATE_ATTEMP_ANSWER} from './questionsAnswersActionTypes';\n\nconst setQuestionAnswersToStoreAction = (data)=>{\n    return{\n        type:SET_QUESTIONS,\n        payload:data\n    }\n}\n\nexport const setQuestionAnswersAction = (url)=>{\n   return async (dispatch)=>{\n        let responce = await (await fetch(url)).json();\n        dispatch(setQuestionAnswersToStoreAction(responce.results))\n   }\n}\n\nexport const removeQuestionAnswersAction= ()=>{\n    return{\n        type:REMOVE_QUESTIONS,\n    }\n}\n\n\nexport const setAttemptedQuestionAction= (answer, questionIndex)=>{\n    return{\n        type:UPDATE_ATTEMP_ANSWER,\n        payload:{answer, questionIndex}\n    }\n}\n","import React from 'react'\nimport './questionForm.css';\nimport Answers from './Answers';\nimport { decodeHTMLEntities } from '../../utils/utility';\n\nconst QuestionForm = ({questions, currectQuestion, stopChange})=>{\n    const activeQuestion = questions[currectQuestion];\n    return (\n        <div id=\"quiz-question-form\">\n            <p className=\"quiz-item\"><b>Category:</b> {activeQuestion?.category}</p>\n            <p className=\"quiz-item progress\">\n                <span><b>Level:</b> {activeQuestion?.difficulty}</span>\n                <span><b>Question:</b> {`${currectQuestion+1}/${questions?.length}`}</span>\n            </p>\n            <div className=\"question-form-group\">\n                <p className=\"question-text\">\n                    {decodeHTMLEntities(activeQuestion?.question || 'Loading...')}\n                </p>\n                <Answers type={activeQuestion?.type} \n                    correct={activeQuestion?.correct_answer}\n                    incorrect={activeQuestion?.incorrect_answers}\n                    currectQuestion={currectQuestion}\n                    attempedOption={activeQuestion?.attempedOption}\n                    stopChange={stopChange}\n                />\n            </div>\n        </div>\n    )\n};\n\nexport default QuestionForm;","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport { readFromLocalStorage } from '../../utils/storage';\nimport QuestionForm from '../questionAnswer/QuestionForm';\nimport './previousSubmission.css'\nimport { useSelector } from 'react-redux';\nimport { decodeHTMLEntities } from '../../utils/utility';\n\nconst PreviousSubmission = ()=>{\n    let quiz = readFromLocalStorage(\"prev-submission\");\n    const login = useSelector(state => state.login);\n    let correctCount = 0;\n    if(quiz){\n        quiz = JSON.parse(quiz);\n        console.log(quiz)\n        correctCount = quiz.reduce((accumulator,question)=>{\n            if(question.correct_answer===question.attempedOption){\n                return accumulator+1\n            }\n            return accumulator;\n        }, 0);\n    }\n\n    return (\n        <div id=\"prev-submission-container\">\n            <div id=\"show-result\">\n                 <p>Hello, {login?.user?.username}</p>\n                 <p>Your Score: {`${correctCount}/${quiz?.length || 0}`}</p>\n            </div>\n            <table>\n                <thead>\n                   <tr>\n                        <th>S.No</th>\n                        <th>Questions</th>\n                        <th>Status</th>\n                        <th>Correct Answer</th>\n                   </tr>\n                </thead>\n               <tbody>\n                   {\n                       quiz && quiz.map((question, index)=>{\n                            return(\n                                <tr key={uuidv4()} >\n                                    <td>{index+1}</td>\n                                    <td>\n                                        <QuestionForm \n                                            questions={quiz} \n                                            currectQuestion={index} stopChange={true}\n                                        />\n                                    </td>\n                                    <td>\n                                        {question.correct_answer===question.attempedOption?\"Correct\":\"Incorrect\"}\n                                    </td>\n                                    <td>{decodeHTMLEntities(question.correct_answer)}</td>\n                                </tr>\n                            )\n                       })\n                   }\n               </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default PreviousSubmission;\n","import React from 'react'\n\nconst FormInput = (props)=>(\n    <label>\n        <p>{props.label}</p>\n        <input value={props.value} onChange={props.setValue} />\n    </label>\n);\n\nexport default FormInput;","import React from 'react'\n\nconst FormSelect = (props) =>(\n    <label>\n        <p>{props.label}</p>\n        <select value={props.selectedValue} onChange={props.setOption}>\n            {\n                props.allOptions.map((option)=>{\n                    return <option value={option.value} key={option.value}>{option.text}</option>\n                })\n            }\n        </select>\n    </label>\n);\n\nexport default FormSelect;","import React from 'react'\n\nconst Form = (props)=>(\n    <form id={props.id} onSubmit={props.onSubmit}>\n         <p className=\"formLabel\">{props.label}</p>\n         {props.children}\n         <input type=\"submit\" value={props.submitValue}/>\n    </form>\n);\n\nexport default Form;","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport { setSelectedCategory, setSelectedLevel, setSelectedType, setQuestionCount } from '../../redux/quizForm/quizFromActions';\nimport { useHistory } from 'react-router-dom';\nimport FormInput from '../form/FormInput';\nimport FormSelect from '../form/FormSelect';\nimport Form from '../form/Form';\n\nconst ChooseQuizForm = ()=>{\n    const quizForm = useSelector(state => state.quizForm);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const setCategory = (event)=>{\n        let value = event.target.value;\n        dispatch(setSelectedCategory(value));\n    };\n\n    const setDifficultyLevel = (event)=>{\n        let value = event.target.value;\n        dispatch(setSelectedLevel(value));\n    };\n\n    const setQuizTypes = (event)=>{\n        let value = event.target.value;\n        dispatch(setSelectedType(value));\n    };\n\n    const setNumberOfQuestions = (event)=>{\n        let value = event.target.value;\n        dispatch(setQuestionCount(value));\n    };\n\n    const startQuiz = (event)=>{\n        event.preventDefault();\n        history.push(\"/startTest\");\n    }\n    \n    return (\n        <Form\n            onSubmit={startQuiz}\n            label=\"Learn QnA Form\"\n            id=\"quiz-form\"\n            submitValue=\"Start Quiz\"\n        >\n            <FormInput \n                label=\"Number of Questions:\"\n                value={quizForm.numberOfQuestions}\n                setValue={setNumberOfQuestions}\n            />\n            <FormSelect \n                label={\"Select Category:\"}\n                selectedValue={quizForm.categories.selected.value}\n                setOption={setCategory}\n                allOptions={quizForm.categories.categoryOptions}\n            />\n            \n            <FormSelect \n                label={\"Select Difficulty:\"}\n                selectedValue={quizForm.difficultyLevels.selected.value}\n                setOption={setDifficultyLevel}\n                allOptions={quizForm.difficultyLevels.difficultyLevelOptions}\n            />\n\n            <FormSelect \n                label={\"Select Type:\"}\n                selectedValue={quizForm.types.selected.value}\n                setOption={setQuizTypes}\n                allOptions={quizForm.types.typeOptions}\n            />\n        </Form>\n    )\n};\n\nexport default  ChooseQuizForm;\n","import { SET_SELECTED_CATEGORY, SET_SELECTED_TYPE, SET_SELECTED_LEVEL, SET_QUESTION_COUNT } from \"./quizFromActionTypes\"\n\n\nexport const setSelectedCategory = (data)=>{\n    return{\n        type:SET_SELECTED_CATEGORY,\n        payload:data\n    }\n}\n\nexport const setSelectedType = (data)=>{\n    return{\n        type:SET_SELECTED_TYPE,\n        payload:data\n    }\n}\n\nexport const setSelectedLevel = (data)=>{\n    return{\n        type:SET_SELECTED_LEVEL,\n        payload:data\n    }\n}\n\nexport const setQuestionCount = (data)=>{\n    return{\n        type:SET_QUESTION_COUNT,\n        payload:data\n    }\n}\n\n","export const SET_SELECTED_CATEGORY = \"SET_SELECTED_CATEGORY\";\nexport const SET_SELECTED_LEVEL = \"SET_SELECTED_LEVEL\";\nexport const SET_SELECTED_TYPE = \"SET_SELECTED_TYPE\";\nexport const SET_QUESTION_COUNT = \"SET_QUESTION_COUNT\";","import React from 'react'\nimport './welcome.css';\n\nconst Welcome =()=>(\n    <div id=\"welcome-container\">\n        <h4 className=\"welcome-text\">Welcome, Guest</h4>\n        <h5 className=\"login-text\">Please login to continue</h5>\n    </div>\n);\n\nexport default  Welcome;","import React from 'react'\nimport './mainQuiz.css';\nimport ChooseQuizForm from './ChooseQuizForm';\nimport { useSelector } from 'react-redux';\nimport Welcome from '../welcome/Welcome';\n\nconst MainQuiz =()=>{\n    const login = useSelector(state => state.login);\n\n    return (\n        <div id=\"main-quiz-container\">\n            {login.isAuthenticated && <ChooseQuizForm />}\n            {!login.isAuthenticated && <Welcome />}\n        </div>\n    )\n};\n\nexport default MainQuiz;\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport { getQuizURL } from '../../utils/utility';\nimport './startTest.css'\nimport QuestionForm from '../questionAnswer/QuestionForm';\nimport { setQuestionAnswersAction, removeQuestionAnswersAction } from '../../redux/questionsAnswes/questionsAnswersActions';\nimport { useHistory } from 'react-router-dom';\nimport { storeToLocalStorage } from '../../utils/storage';\nimport Welcome from '../welcome/Welcome';\n\nexport default function StartTest() {\n    \n    const quiz = useSelector(state => ({\n        quizForm: state.quizForm,\n        questionAnswers:state.questionAnswers,\n        isAuthenticated:state.login.isAuthenticated\n    }));\n\n    const dispatch = useDispatch();\n    const numOfQuestions = quiz.quizForm.numberOfQuestions;\n    const selectedCategory = quiz.quizForm.categories.selected.value;\n    const selectedDifficultyLevel = quiz.quizForm.difficultyLevels.selected.value;\n    const selectedType = quiz.quizForm.types.selected.value;\n    const [currectQuestion, setCurrectQuestion] = useState(0);\n    const history = useHistory();\n    const uref = useRef(true);\n\n    const fetchQuestions = useCallback(()=>{\n        let formValues = {\n            numOfQuestions,\n            selectedCategory,\n            selectedDifficultyLevel,\n            selectedType\n        }\n        const url =  getQuizURL(formValues);\n        if(uref.current){\n            console.log(\"fetching quiz\");\n            dispatch(setQuestionAnswersAction(url));\n        }\n    }, [dispatch, numOfQuestions, selectedCategory, selectedDifficultyLevel, selectedType]);\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            fetchQuestions();\n        }, 500);\n\n        return ()=>{\n            uref.current=false;\n            dispatch(removeQuestionAnswersAction());\n        }\n    }, [dispatch, fetchQuestions]);\n\n    const endTest = ()=>{\n        const confirmEnd = window.confirm(\"Are you sure, you want to end the test\");\n        if(confirmEnd){\n            history.push(\"/previousSubmission\");\n            storeToLocalStorage(\"prev-submission\", JSON.stringify(quiz.questionAnswers))\n        }\n    };\n\n    return (\n        <>\n            {\n                !quiz.isAuthenticated?\n                <Welcome />:\n                <div id=\"quiz-container\">\n                    <div id=\"quiz-questions-container\" >\n                        <div id=\"quiz-questions-form\">\n                            <QuestionForm questions={quiz.questionAnswers} currectQuestion={currectQuestion}/>\n                        </div>\n                        <div id=\"quiz-container-footer\">\n                            <button onClick={()=>setCurrectQuestion(currectQuestion-1)}\n                                className={`footer-item ${currectQuestion <= 0 && 'disabled'}`}\n                            >\n                                Previous\n                            </button>\n                            <button onClick={()=>setCurrectQuestion(currectQuestion+1)}\n                                className={`footer-item ${currectQuestion + 1 >= quiz.questionAnswers?.length && 'disabled'}`}\n                            >\n                                Next\n                            </button>\n                            <button to=\"/result\" \n                                className=\"footer-item\" onClick={endTest}>\n                                End Test\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n","export const BASE_API_URL = \"https://opentdb.com/api.php\";","import React, {useEffect, useRef} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport Login from './components/login/Login';\nimport PreviousSubmission from './components/previousSubmission/PreviousSubmission';\nimport MainQuiz from './components/mainQuiz/MainQuiz';\nimport { readFromLocalStorage} from './utils/storage';\nimport { STORE_USER } from './redux/login/loginActionTypes';\nimport { storeUserLogin } from './redux/login/loginActions';\nimport StartTest from './components/startTest/StartTest';\n\nconst App = ()=>{\n\n  const dispatch = useDispatch();\n  const logoRef = useRef();\n  useEffect(() => {\n    let user = readFromLocalStorage(STORE_USER);\n    if(user){\n      user = JSON.parse(user);\n      dispatch(storeUserLogin(user.email, user.username));\n      goToRoot();\n    }\n  }, [dispatch]);\n\n  const goToRoot = ()=>{\n    logoRef.current.click();\n  }\n\n  return (\n    <div className=\"App\">\n        <Router>\n            <Header logoRef={logoRef}/>\n            <Switch>\n                <Route path=\"/login\" exact strict component={()=> <Login goToRoot={goToRoot}/>} />\n                <Route path=\"/login/:auth\" exact strict component={()=> <Login goToRoot={goToRoot}/>} />\n                <Route path=\"/previousSubmission\" exact strict component={PreviousSubmission} />\n                <Route path=\"/startTest\" exact strict component={StartTest} />\n                <Route path=\"/\" exact strict component={MainQuiz} />\n            </Switch>\n        </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const { READ_USER, STORE_USER, DELETE_USER } = require(\"./loginActionTypes\");\n\nconst initialState={\n    user:{\n        email:'',\n        username:''\n    },\n    isAuthenticated:false\n};\n\nexport const loginReducer = (state = initialState, action)=>{\n    const newState = {...state};\n    switch(action.type){\n        case STORE_USER: \n            newState.user = {\n                email: action.payload.email,\n                username: action.payload.username\n            };\n            newState.isAuthenticated = true;\n            break;\n        case READ_USER:\n            newState.user = {\n                email: action.payload.email,\n                username: action.payload.username\n            };\n            newState.isAuthenticated = action.payload.isAuthenticated;\n            break;\n        case DELETE_USER:\n            newState.isAuthenticated=false;\n            newState.user={}\n            break;\n        default: return state;\n    }\n    return newState;\n};","import {SET_SELECTED_CATEGORY, SET_SELECTED_LEVEL, SET_QUESTION_COUNT, SET_SELECTED_TYPE} from './quizFromActionTypes'\nconst initialState={\n    numberOfQuestions: 5,\n    categories:{\n        selected: {\n            \"value\": \"any\"\n        },\n        categoryOptions: [\n            {\n              \"text\": \"Any Category\",\n              \"value\": \"any\"\n            },\n            {\n              \"text\": \"General Knowledge\",\n              \"value\": \"9\"\n            },\n            {\n              \"text\": \"Entertainment: Books\",\n              \"value\": \"10\"\n            },\n            {\n              \"text\": \"Entertainment: Film\",\n              \"value\": \"11\"\n            },\n            {\n              \"text\": \"Entertainment: Music\",\n              \"value\": \"12\"\n            },\n            {\n              \"text\": \"Entertainment: Musicals & Theatres\",\n              \"value\": \"13\"\n            },\n            {\n              \"text\": \"Entertainment: Television\",\n              \"value\": \"14\"\n            },\n            {\n              \"text\": \"Entertainment: Video Games\",\n              \"value\": \"15\"\n            },\n            {\n              \"text\": \"Entertainment: Board Games\",\n              \"value\": \"16\"\n            },\n            {\n              \"text\": \"Science & Nature\",\n              \"value\": \"17\"\n            },\n            {\n              \"text\": \"Science: Computers\",\n              \"value\": \"18\"\n            },\n            {\n              \"text\": \"Science: Mathematics\",\n              \"value\": \"19\"\n            },\n            {\n              \"text\": \"Mythology\",\n              \"value\": \"20\"\n            },\n            {\n              \"text\": \"Sports\",\n              \"value\": \"21\"\n            },\n            {\n              \"text\": \"Geography\",\n              \"value\": \"22\"\n            },\n            {\n              \"text\": \"History\",\n              \"value\": \"23\"\n            },\n            {\n              \"text\": \"Politics\",\n              \"value\": \"24\"\n            },\n            {\n              \"text\": \"Art\",\n              \"value\": \"25\"\n            },\n            {\n              \"text\": \"Celebrities\",\n              \"value\": \"26\"\n            },\n            {\n              \"text\": \"Animals\",\n              \"value\": \"27\"\n            },\n            {\n              \"text\": \"Vehicles\",\n              \"value\": \"28\"\n            },\n            {\n              \"text\": \"Entertainment: Comics\",\n              \"value\": \"29\"\n            },\n            {\n              \"text\": \"Science: Gadgets\",\n              \"value\": \"30\"\n            },\n            {\n              \"text\": \"Entertainment: Japanese Anime & Manga\",\n              \"value\": \"31\"\n            },\n            {\n              \"text\": \"Entertainment: Cartoon & Animations\",\n              \"value\": \"32\"\n            }\n          ]\n    },\n    difficultyLevels: {\n        selected: {\n            \"value\":'any'\n        },\n        difficultyLevelOptions: [\n            {\n                \"text\":'Any Difficulty',\n                \"value\":'any'\n            },\n            {\n                \"text\":'Easy',\n                \"value\":'easy'\n            },\n            {\n                \"text\":'Medium',\n                \"value\":'medium'\n            },\n            {\n                \"text\":'Hard',\n                \"value\":'hard'\n            },\n        ]\n    },\n    types:{\n        selected:{\n            \"value\":'any'\n        },\n        typeOptions: [\n            {\n                \"text\":'Any Type', \n                \"value\":'any'\n            },\n            {\n                \"text\":'Multiple Choice', \n                \"value\":'multiple',\n            },\n            {\n                \"text\":'True/False', \n                \"value\":'boolean'\n            }\n        ]\n    }\n}\n\nexport const quizFormReducer = (state=initialState, action)=>{\n    const newState = {...state};\n    switch(action.type){\n        case SET_QUESTION_COUNT:\n            newState.numberOfQuestions=action.payload\n            break;\n        case SET_SELECTED_CATEGORY:\n            newState.categories = {...newState.categories};\n            newState.categories.selected = {\n                value:action.payload\n            }\n            break;\n        case SET_SELECTED_LEVEL:\n            newState.difficultyLevels = {...newState.difficultyLevels};\n            newState.difficultyLevels.selected = {\n                value:action.payload\n            }\n            break;\n        case SET_SELECTED_TYPE:\n            newState.types = {...newState.types};\n            newState.types.selected = {\n                value:action.payload\n            }\n            break;\n        default: return state;\n    }\n    return newState;\n    \n};","const { SET_QUESTIONS, UPDATE_ATTEMP_ANSWER, REMOVE_QUESTIONS } = require(\"./questionsAnswersActionTypes\");\n\nconst initialState = [];\n\nexport const questionAndAnswersReducer = (state=initialState, action)=>{\n    let newState = [...state];\n    switch(action.type){\n        case SET_QUESTIONS:\n            const appendAns = action.payload.map((question)=>{\n                return {\n                    ...question,\n                    attempedOption:''\n                }\n            });\n            newState = appendAns;\n            console.log(newState);\n            break;\n        case REMOVE_QUESTIONS:\n            newState = []\n             break;\n        case UPDATE_ATTEMP_ANSWER:\n            let question = {...newState[action.payload.questionIndex]};\n            question.attempedOption=action.payload.answer;\n            newState[action.payload.questionIndex]=question;\n            break;\n        default: return state;\n    }\n    return newState;\n};","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport { loginReducer } from './login/loginReducer';\nimport {quizFormReducer} from './quizForm/quizFormReducer';\nimport thunk from 'redux-thunk';\nimport { questionAndAnswersReducer } from './questionsAnswes/questionsAnswersReducer';\n\nconst rootStore = combineReducers({\n    login:loginReducer,\n    quizForm:quizFormReducer,\n    questionAnswers:questionAndAnswersReducer\n});\n\nexport const store = createStore(rootStore, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}